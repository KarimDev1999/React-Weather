{"version":3,"sources":["assets/img/weather-bg.jpg","assets/img/sunny.jpg","components/Header.jsx","components/Info.jsx","components/TextField.jsx","components/WeatherCard.jsx","redux/actions/weather.js","components/Loader.jsx","components/WeatherInfo.jsx","App.js","redux/reducers/weather.js","redux/reducers/rootReducer.js","redux/store.js","serviceWorker.js","index.js"],"names":["module","exports","useStyles","makeStyles","link","color","textDecoration","fontSize","row","display","Header","classes","AppBar","position","Toolbar","List","className","ListItem","Typography","variant","to","Info","theme","root","padding","alignItems","width","input","marginLeft","spacing","flex","TextField","handleChange","currentInput","handleClick","Paper","onSubmit","e","preventDefault","component","InputBase","onChange","value","placeholder","IconButton","onClick","aria-label","temp","height","flexDirection","backgroundImage","bgCold","bgSunny","backgroundRepeat","backgroundPosition","backgroundSize","boxShadow","topContent","justifyContent","borderBottom","text","textShadow","textAlign","bottomContent","WeatherCard","currentItem","days","months","parseInt","main","date","Date","console","log","getDay","getDate","getMonth","getFullYear","Box","ml","weather","description","mr","humidity","wind","speed","name","sys","country","mt","setCurrentInput","payload","type","setLoading","Loader","CircularProgress","maxWidth","media","center","WeatherInfo","useState","showWeather","setShowWeather","useSelector","item","loading","dispatch","useDispatch","m","bgcolor","axios","get","then","data","catch","err","alert","fetchWeather","target","App","Container","exact","path","initialState","state","action","rootReducer","combineReducers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.1c112e5e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/weather-bg.93d288dc.jpg\";","module.exports = __webpack_public_path__ + \"static/media/sunny.baf15595.jpg\";","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    link: {\r\n        color: '#fff',\r\n        textDecoration: 'none',\r\n        fontSize: '28px',\r\n\r\n    },\r\n    row: {\r\n        display: 'flex',\r\n    }\r\n});\r\nconst Header = () => {\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <AppBar position=\"static\">\r\n            <Toolbar>\r\n                <List className={classes.row}>\r\n                    <ListItem>\r\n                        <Typography variant=\"h6\">\r\n                            <Link to='/' className={classes.link}>Weather</Link>\r\n                        </Typography>\r\n                    </ListItem>\r\n                    <ListItem>\r\n                        <Typography variant=\"h6\">\r\n                            <Link to='/info' className={classes.link}>Info</Link>\r\n                        </Typography>\r\n                    </ListItem>\r\n                </List>\r\n            </Toolbar>\r\n\r\n        </AppBar>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react';\r\n\r\nconst Info = () => {\r\n    return (\r\n        <div>\r\n            Weather-app. Version 1.0\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Info\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        padding: '2px 4px',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        width: 350,\r\n    },\r\n    input: {\r\n        marginLeft: theme.spacing(1),\r\n        flex: 1,\r\n    },\r\n}));\r\n\r\nfunction TextField({ handleChange, currentInput, handleClick }) {\r\n    const classes = useStyles();\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n    }\r\n\r\n\r\n    return (\r\n        <Paper onSubmit={onSubmit} component=\"form\" className={classes.root}>\r\n            <InputBase onChange={handleChange}\r\n                value={currentInput}\r\n                className={classes.input}\r\n                placeholder=\"Введите название города\"\r\n            />\r\n            <IconButton onClick={handleClick} aria-label=\"search\">\r\n                <SearchIcon />\r\n            </IconButton>\r\n        </Paper>\r\n    );\r\n}\r\nexport default TextField;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport bgCold from '../assets/img/weather-bg.jpg';\r\nimport bgSunny from '../assets/img/sunny.jpg';\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    root: temp => ({\r\n        width: 840,\r\n        height: 550,\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        backgroundImage: temp < 10 ? `url(${bgCold})` : `url(${bgSunny})`,\r\n        backgroundRepeat: 'no - repeat',\r\n        backgroundPosition: 'center',\r\n        backgroundSize: 'cover',\r\n        boxShadow: '3px 3px 8px 4px rgba(34, 60, 80, 0.2)',\r\n\r\n    }),\r\n    topContent: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        flex: '0 0 50%',\r\n        borderBottom: '1px solid #fff'\r\n\r\n    },\r\n    text: {\r\n        color: '#fff',\r\n        textShadow: '3px 3px rgba(50, 50, 70, 0.5)',\r\n        textAlign: 'center'\r\n    },\r\n    borderBottom: {\r\n        borderBottom: '1px solid #fff',\r\n    },\r\n\r\n    bottomContent: {\r\n        flex: '0 0 50%',\r\n\r\n    },\r\n    row: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between'\r\n    },\r\n\r\n\r\n});\r\n\r\nconst WeatherCard = ({ currentItem }) => {\r\n    const days = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'];\r\n    const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\r\n    const temp = parseInt(currentItem.main.temp)\r\n    const classes = useStyles(temp)\r\n    let date = new Date;\r\n    console.log(days[date.getDay()], date.getDate(), months[date.getMonth()], date.getFullYear())\r\n    return (\r\n        <div>\r\n            <div className={classes.root}>\r\n                <div className={classes.topContent}>\r\n                    <Box ml={5}>\r\n                        <Typography className={`${classes.text} ${classes.borderBottom}`} variant=\"h1\">\r\n                            {temp + '°c'}\r\n                        </Typography>\r\n                        <Typography className={classes.text} variant=\"h4\">{currentItem.weather[0].description}</Typography>\r\n                        <div className={classes.row}>\r\n                            <Box mr={2}>\r\n                                <Typography className={classes.text} variant=\"h6\">{`humidity: ${currentItem.main.humidity} %`}</Typography>\r\n                            </Box>\r\n                            <Box ml={2}>\r\n                                <Typography className={classes.text} variant=\"h6\">{`wind: ${currentItem.wind.speed} K/M`}</Typography>\r\n                            </Box>\r\n                        </div>\r\n                    </Box>\r\n                    <Box mr={5}>\r\n                        <Typography className={classes.text} variant=\"h3\">\r\n                            {`${currentItem.name}, ${currentItem.sys.country}`}\r\n                        </Typography>\r\n                    </Box>\r\n\r\n                </div>\r\n                <div className={classes.bottomContent}>\r\n                    <Box mt={10}>\r\n                        <Typography className={classes.text} variant=\"h3\">\r\n                            {`${days[date.getDay()]} ${date.getDate()} ${months[date.getMonth()]} ${date.getFullYear()}`}\r\n                        </Typography>\r\n                    </Box>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WeatherCard\r\n","import axios from 'axios'\r\n\r\nexport const setCurrentInput = payload => ({\r\n    type: 'SET_CURRENT_INPUT',\r\n    payload,\r\n});\r\n\r\n\r\nexport const setCurrentItem = payload => ({\r\n    type: 'SET_CURRENT_ITEM',\r\n    payload,\r\n});\r\n\r\n\r\nexport const setLoading = payload => ({\r\n    type: 'SET_LOADING',\r\n    payload,\r\n})\r\n\r\nconst API_KEY = '381397280a22a3d847804f46ac23b87e';\r\nexport const fetchWeather = (currentInput, setShowWeather) => dispatch => {\r\n    axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${currentInput}&units=metric&appid=${API_KEY}`).then(({ data }) => {\r\n        dispatch(setLoading(false));\r\n        dispatch(setCurrentItem(data));\r\n        setShowWeather(true);\r\n\r\n    }).catch(err => {\r\n        alert(err)\r\n    });\r\n};\r\n","import React from 'react'\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nconst Loader = () => {\r\n    return (\r\n        <div>\r\n            <CircularProgress />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loader;\r\n","import React, { useState } from 'react';\r\n// components\r\nimport TextField from './TextField';\r\nimport WeatherCard from './WeatherCard'\r\n// components\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { setCurrentInput, setLoading, fetchWeather } from '../redux/actions/weather';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Box from '@material-ui/core/Box';\r\nimport Loader from './Loader';\r\n\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        maxWidth: 840,\r\n\r\n    },\r\n    media: {\r\n        height: 440,\r\n    },\r\n    center: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        flexDirection: 'column',\r\n        height: 'calc(100vh - 65px)',\r\n    }\r\n});\r\n\r\n\r\n\r\nconst WeatherInfo = () => {\r\n\r\n    const classes = useStyles()\r\n    const [showWeather, setShowWeather] = useState(false)\r\n    const currentInput = useSelector(({ weather }) => weather.currentInput);\r\n    const currentItem = useSelector(({ weather }) => weather.item);\r\n    const loading = useSelector(({ weather }) => weather.loading);\r\n    const dispatch = useDispatch();\r\n\r\n\r\n\r\n    const handleChange = (e) => {\r\n        e.preventDefault();\r\n        const value = e.target.value;\r\n        dispatch(setCurrentInput(value));\r\n    }\r\n\r\n\r\n\r\n    const handleClick = (e) => {\r\n        e.preventDefault();\r\n        dispatch(setCurrentInput(''))\r\n        dispatch(setLoading(true))\r\n        dispatch(fetchWeather(currentInput, setShowWeather))\r\n    }\r\n\r\n\r\n    return (\r\n\r\n        <div className={classes.center}>\r\n            <Box m={5} bgcolor=\"background.paper\">\r\n                <TextField handleClick={handleClick} currentInput={currentInput} handleChange={handleChange} />\r\n            </Box>\r\n            {loading ? <Loader /> : null}\r\n            { showWeather && !loading &&\r\n                <WeatherCard currentItem={currentItem} />}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WeatherInfo\r\n","import React from 'react';\r\nimport './app.css';\r\n// components\r\nimport { Header, WeatherInfo, Info } from './components/';\r\n// components\r\nimport { HashRouter, Switch, Route } from 'react-router-dom';\r\n\r\nimport Container from '@material-ui/core/Container';\r\n\r\n\r\nconst App = () => {\r\n  return (\r\n    <HashRouter>\r\n      <div className=\"App\">\r\n        <Header />\r\n        <Container>\r\n          <Switch>\r\n            <Route exact path='/' component={WeatherInfo} />\r\n            <Route exact path='/info' component={Info} />\r\n          </Switch>\r\n        </Container>\r\n      </div>\r\n    </HashRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const initialState = {\r\n    currentInput: '',\r\n    item: {},\r\n    loading: false,\r\n}\r\n\r\n\r\n\r\n\r\nconst weather = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case 'SET_CURRENT_INPUT':\r\n            return {\r\n                ...state,\r\n                currentInput: action.payload\r\n            }\r\n        case 'SET_CURRENT_ITEM':\r\n            return {\r\n                ...state,\r\n                item: action.payload,\r\n\r\n            }\r\n\r\n        case 'SET_LOADING':\r\n            return {\r\n                ...state,\r\n                loading: action.payload,\r\n            }\r\n\r\n        default: return state\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport default weather;","import { combineReducers } from 'redux';\r\nimport weather from './weather';\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    weather,\r\n})\r\n\r\n\r\nexport default rootReducer;","import { createStore, compose, applyMiddleware } from 'redux';\r\nimport rootReducer from './reducers/rootReducer.js';\r\nimport thunk from 'redux-thunk'\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\r\nexport default store;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport { Provider } from 'react-redux';\r\nimport store from './redux/store';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}